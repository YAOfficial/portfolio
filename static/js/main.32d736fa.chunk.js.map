{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","logo","document","querySelectorAll","i","length","console","log","getTotalLength","getElementById","addEventListener","classList","toggle","remove","element","getElementsByClassName","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.32d736fa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport app from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nconst logo = document.querySelectorAll(\"#logo  path\");\n\nfor (let i = 0; i < logo.length; i++) {\n  console.log(`Letter ${i} is ${logo[i].getTotalLength()}`);\n}\n\ndocument.getElementById(\"html1\").addEventListener(\"click\", () => {\n  document.getElementById(\"bgfill\").classList.toggle(\"orange\");\n  document.getElementById(\"bgfill1\").classList.toggle(\"orange\");\n  document.getElementById(\"numberfill\").classList.toggle(\"white\");\n  document.getElementById(\"numberfill1\").classList.toggle(\"white\");\n  document.getElementById(\"numberfill3\").classList.toggle(\"white\");\n  document.getElementById(\"numberfill4\").classList.toggle(\"white\");\n\n  //opens box on click\n  document.getElementById(\"box1\").classList.toggle(\"tbox1\");\n  // eslint-disable-next-line\n  document.getElementById(\"myDiv\").classList.toggle(\"shows\");\n  //removes css active color on click\n\n  document.getElementById(\"cssbg\").classList.remove(\"blue\");\n  document.getElementById(\"cssbg1\").classList.remove(\"blue\");\n  document.getElementById(\"cssnum1\").classList.remove(\"white\");\n  document.getElementById(\"cssnum2\").classList.remove(\"white\");\n  document.getElementById(\"cssnum3\").classList.remove(\"white\");\n  document.getElementById(\"cssnum4\").classList.remove(\"white\");\n\n  // removes javascript active color on click\n\n  document.getElementById(\"jsbg\").classList.remove(\"yellow\");\n  document.getElementById(\"jstext\").classList.remove(\"black\");\n  document.getElementById(\"jstext1\").classList.remove(\"black\");\n});\n\ndocument.getElementById(\"css1\").addEventListener(\"click\", () => {\n  document.getElementById(\"cssbg\").classList.toggle(\"blue\");\n  document.getElementById(\"cssbg1\").classList.toggle(\"blue\");\n  document.getElementById(\"cssnum1\").classList.toggle(\"white\");\n  document.getElementById(\"cssnum2\").classList.toggle(\"white\");\n  document.getElementById(\"cssnum3\").classList.toggle(\"white\");\n  document.getElementById(\"cssnum4\").classList.toggle(\"white\");\n\n  //opens box on click\n\n  let element = document.getElementById(\"box2\");\n  document.getElementsByClassName(\"box3\");\n  document.getElementById(\"myDiv2\").classList.toggle(\"show2\");\n  document.getElementById(\"box3\").classList.remove(\"box3\");\n  document.getElementById(\"box1\").classList.remove(\"box2\");\n  document.getElementById(\"myDiv3\").classList.remove(\"show3\");\n  document.getElementById(\"myDiv\").classList.remove(\"show\");\n  element.classList.toggle(\"box3\");\n\n  // removes html active color on click\n  document.getElementById(\"bgfill\").classList.remove(\"orange\");\n  document.getElementById(\"bgfill1\").classList.remove(\"orange\");\n  document.getElementById(\"numberfill\").classList.remove(\"white\");\n  document.getElementById(\"numberfill1\").classList.remove(\"white\");\n  document.getElementById(\"numberfill3\").classList.remove(\"white\");\n  document.getElementById(\"numberfill4\").classList.remove(\"white\");\n\n  // removes javascript active color on click\n  document.getElementById(\"jsbg\").classList.remove(\"yellow\");\n  document.getElementById(\"jstext\").classList.remove(\"black\");\n  document.getElementById(\"jstext1\").classList.remove(\"black\");\n});\n\ndocument.getElementById(\"js1\").addEventListener(\"click\", () => {\n  document.getElementById(\"jsbg\").classList.toggle(\"yellow\");\n  document.getElementById(\"jstext\").classList.toggle(\"black\");\n  document.getElementById(\"jstext1\").classList.toggle(\"black\");\n\n  // opens box on click\n  let element = document.getElementById(\"box3\");\n  document.getElementsByClassName(\"box3\");\n  document.getElementById(\"myDiv3\").classList.toggle(\"show3\");\n  document.getElementById(\"box1\").classList.remove(\"box1\");\n  document.getElementById(\"myDiv2\").classList.remove(\"show2\");\n  document.getElementById(\"box2\").classList.remove(\"box2\");\n  document.getElementById(\"myDiv\").classList.remove(\"show\");\n  element.classList.toggle(\"box3\");\n\n  // removes html active color on click\n\n  document.getElementById(\"bgfill\").classList.remove(\"orange\");\n  document.getElementById(\"bgfill1\").classList.remove(\"orange\");\n  document.getElementById(\"numberfill\").classList.remove(\"white\");\n  document.getElementById(\"numberfill1\").classList.remove(\"white\");\n  document.getElementById(\"numberfill3\").classList.remove(\"white\");\n  document.getElementById(\"numberfill4\").classList.remove(\"white\");\n\n  //removes css active color on click\n\n  document.getElementById(\"cssbg\").classList.remove(\"blue\");\n  document.getElementById(\"cssbg1\").classList.remove(\"blue\");\n  document.getElementById(\"cssnum1\").classList.remove(\"white\");\n  document.getElementById(\"cssnum2\").classList.remove(\"white\");\n  document.getElementById(\"cssnum3\").classList.remove(\"white\");\n  document.getElementById(\"cssnum4\").classList.remove(\"white\");\n});\n\nfunction html4() {\n  let element = document.getElementById(\"box1\");\n\n  document.getElementsByClassName(\"box2\");\n  document.getElementById(\"myDiv\").classList.toggle(\"show\");\n\n  element.classList.toggle(\"box2\");\n  document.getElementById(\"myDiv3\").classList.remove(\"show3\");\n  document.getElementById(\"box3\").classList.remove(\"box3\");\n  document.getElementById(\"box2\").classList.remove(\"box3\");\n  document.getElementById(\"myDiv2\").classList.remove(\"show2\");\n}\n\nfunction css4() {\n  let element = document.getElementById(\"box2\");\n  document.getElementsByClassName(\"box3\");\n  document.getElementById(\"myDiv2\").classList.toggle(\"show2\");\n  document.getElementById(\"box3\").classList.remove(\"box3\");\n  document.getElementById(\"box1\").classList.remove(\"box2\");\n  document.getElementById(\"myDiv3\").classList.remove(\"show3\");\n  document.getElementById(\"myDiv\").classList.remove(\"show\");\n  element.classList.toggle(\"box3\");\n}\n\nfunction git() {\n  document.getElementById(\"github\").style.fill = \"rgb(17, 16, 16)\";\n}\n\nfunction got() {\n  document.getElementById(\"github\").style.fill = \"white\";\n}\n\nfunction lin() {\n  document.getElementById(\"linkedin\").style.fill = \"rgb(31, 143, 248)\";\n}\n\nfunction lik() {\n  document.getElementById(\"linkedin\").style.fill = \"white\";\n}\n\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}